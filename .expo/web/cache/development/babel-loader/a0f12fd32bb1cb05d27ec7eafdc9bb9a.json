{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Berk\\\\Desktop\\\\\\x7FReact-native-proje\\\\Reactnativeproject\\\\Category\\\\Category_add.js\";\n\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Input } from 'react-native-elements';\nimport config from \"../env/config\";\nimport basemanager from \"../service/baseservice\";\n\nvar Category_add = function Category_add() {\n  basemanager.get('api/products').then(function (data) {\n    console.log(data);\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      categoryName = _useState2[0],\n      setCategoryName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var send = function send() {\n    basemanager.post('api/categories', {\n      name: categoryName,\n      description: description\n    }).then(function (res) {\n      alert('Success!!');\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../Images/background.jpg\"),\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Category name\",\n    onChangeText: function onChangeText(value) {\n      return setCategoryName(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(value) {\n      return setDescription(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return send();\n    },\n    title: \"Send\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Category_add;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  card: {\n    backgroundColor: '#fff',\n    width: \"%100\",\n    height: 280\n  },\n  iconView: {\n    border: \"0.1rem outset black\",\n    marginHorizontal: 260,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowOpacity: 4.32,\n    shadowRadius: 5.46,\n    elevation: 9\n  },\n  image: {\n    resizeMode: 'cover'\n  },\n  deleteicon: {\n    backgroundColor: \"#fff\",\n    borderRadius: 15,\n    width: 60,\n    height: 60,\n    padding: 8,\n    textAlign: 'center',\n    marginHorizontal: 225,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 1.22,\n    shadowRadius: 2.22,\n    elevation: 3\n  },\n  textStyle: {\n    color: \"Black\",\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: 'Tahoma'\n  },\n  title: {\n    color: '#e5e5e5',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginHorizontal: 60,\n    fontFamily: 'Tahoma'\n  }\n});","map":{"version":3,"sources":["C:/Users/Berk/Desktop/React-native-proje/Reactnativeproject/Category/Category_add.js"],"names":["React","useState","Input","config","basemanager","Category_add","get","then","data","console","log","categoryName","setCategoryName","description","setDescription","send","post","name","res","alert","styles","container","require","image","value","StyleSheet","create","flex","justifyContent","alignItems","card","backgroundColor","width","height","iconView","border","marginHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","resizeMode","deleteicon","borderRadius","padding","textAlign","textStyle","color","fontSize","fontWeight","fontFamily","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from 'react-native';\nimport { View, TextInput,StyleSheet, ImageBackground } from 'react-native';\nimport { Input } from 'react-native-elements';\nimport config from '../env/config'\nimport basemanager from '../service/baseservice';\n\nconst Category_add = () => {\n\n    basemanager.get('api/products').then((data)=>{\n        console.log(data);\n    });    \n   \n\n    const [categoryName, setCategoryName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const send = () => {\n\n        // let requestOptions = {\n        //     method:'POST',\n        //     body:JSON.stringify({name:categoryName, description:description}),\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //       }\n        // }\n\n        // fetch(config.apiurl + 'api/categories',requestOptions)\n        // .then((res) => res.json())\n        // .then((data) => {\n\n        //    alert('Success!');\n\n        // })\n\n        basemanager.post('api/categories',{name:categoryName, description:description})\n        .then((res)=> {\n            alert('Success!!');\n        })\n        \n\n    }\n\n    return (\n        <View style={styles.container}>\n             <ImageBackground source={require('../Images/background.jpg')} style={styles.image}></ImageBackground>\n\n            <Input\n                placeholder='Category name'\n                onChangeText={value => setCategoryName(value)}\n            />\n\n            <Input\n                placeholder='Description'\n                onChangeText={value => setDescription(value)}\n            />  \n\n            <Button onPress={() => send()} title='Send'></Button>\n\n\n        </View>\n    )\n}\n\nexport default Category_add\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n\n    },\n    card: {\n        backgroundColor: '#fff',  \n        width: \"%100\",\n        height:280,\n       /* shadowColor: \"#000\",\n        shadowOffset: {\n            width: 5,\n            height: 5,\n        },\n        shadowOpacity: 4.32,\n        shadowRadius: 5.46,\n        elevation: 9,*/\n\n    },\n    iconView: {\n        border: \"0.1rem outset black\",\n        marginHorizontal:260,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 5,\n            height: 5,\n        },\n        shadowOpacity: 4.32,\n        shadowRadius: 5.46,\n        elevation: 9,\n\n    },\n    image: {\n       // flex: 1,\n      resizeMode: 'cover',\n     \n    \n    },\n\n    deleteicon: {\n        backgroundColor: \"#fff\",\n        borderRadius: 15,\n        width: 60,\n        height: 60,\n        padding:8,\n        textAlign: 'center',\n        marginHorizontal: 225,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 1.22,\n        shadowRadius: 2.22,\n        \n        elevation: 3,\n\n    },\n  \n\n    textStyle: {\n        color: \"Black\",\n        fontSize: 16,\n        fontWeight: 'bold',\n        fontFamily: 'Tahoma'\n\n    },\n    title: {\n        color: '#e5e5e5',\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginHorizontal: 60,\n        fontFamily: 'Tahoma',\n    },\n\n\n});"]},"metadata":{},"sourceType":"module"}